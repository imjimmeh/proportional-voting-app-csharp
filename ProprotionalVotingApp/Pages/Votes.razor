@page "/votes"

<PageTitle>Votes</PageTitle>

@using ProportionalVotingApp.Models.DTOs
@using ProportionalVotingApp.Models.Services
@inject IVotingRepository repository
@inject NavigationManager navigator

<h1>Votes</h1>

@if (votes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Creator</th>
                <th>Completed</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vote in votes)
            {
                <tr>
                    <td>@vote.CreatedAt</td>
                    <td><a @onclick="@(() => navigator.NavigateTo($"/votes/{vote.Id}"))">@vote.Creator</a></td>
                    <td>@vote.Completed</td>
                </tr>
            }s
        </tbody>
    </table>

    <div><a href="/votes/create">Create Vote</a></div>
}

@code {
    private List<VoteWithIdDTO> votes;

    protected override async Task OnInitializedAsync()
    {
        votes = await repository.GetVotesAsync(vote => vote != null);
    }

    protected async void ShowVote(long id)
    {
        navigator.NavigateTo("/votes/" + id);
    }
}
