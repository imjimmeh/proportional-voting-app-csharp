@page "/register"
@using Jim.Core.Authentication.Models.DTOs
@using Jim.Core.Authentication.Models.Database
@using Jim.Core.Authentication.Models.Services
@using Microsoft.AspNetCore.Identity

@inject IUserManagerService userService
@inject IUserSignInManager<User> signInManager
@inject NavigationManager navigation
<h3>RegisterUser</h3>

<div>
    <div>
        @{
            <p>@errorMessages</p>
        }
    </div>
    <div class="form-group">
        <label for="username">Username: </label>
        <input id="username" @bind-value="@createUserRequest.Username" placeholder="Username" />
    </div>

    <button class="btn-primary" @onclick="@RegisterNewUser">Create User</button>
</div>

@code {
    public CreateUserDTO createUserRequest = new CreateUserDTO();

    string errorMessages = "";
    async Task RegisterNewUser()
    {
        if(!createUserRequest.IsValidRequest)
        {
            errorMessages = "Invalid user request - please provide username";
            return;
        }

        var result = await userService.CreateNewUser(createUserRequest);

        if(result)
        {
            await signInManager.SignInAsync(new User
                {
                    Username = createUserRequest.Username
                }, "Token");


                navigation.NavigateTo("/loggedin");
        }
        errorMessages = result ? "" : "Could not create user";
    }
}
